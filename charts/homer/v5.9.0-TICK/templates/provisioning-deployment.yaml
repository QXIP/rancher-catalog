apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: provisioning
  name: provisioning
spec:
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: provisioning
    spec:
      restartPolicy: "Never"
      containers:
      - args:
        - /bin/sh
        - -c
        - |
          if [ -f /.bootstrapped ]; then
            echo "Already Bootstrapped! Exiting ..."
            exit 0
          fi
          apk add --no-cache curl;
          echo Waiting for influxdb API ...;
          while ! nc -z influxdb 8086;
          do
            sleep 2;
            echo "Trying...";
          done;
          echo InfluxDB Retention Policy push ...;
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE DATABASE homer'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE RETENTION POLICY "60s" ON "homer" DURATION 4w REPLICATION 1 DEFAULT'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE RETENTION POLICY "300s" ON "homer" DURATION 8w REPLICATION 1'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE RETENTION POLICY "3600s" ON "homer" DURATION 16w REPLICATION 1'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE RETENTION POLICY "86400s" ON "homer" DURATION 32w REPLICATION 1'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE CONTINUOUS QUERY cq_300s ON homer RESAMPLE EVERY 1m BEGIN SELECT mean(*) INTO homer."300s".:MEASUREMENT FROM homer."60s"./.*/ GROUP BY time(5m),* END'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE CONTINUOUS QUERY cq_3600s ON homer RESAMPLE EVERY 10m BEGIN SELECT mean(*) INTO homer."3600s".:MEASUREMENT FROM homer."60s"./.*/ GROUP BY time(1h),* END'
          curl -G http://influxdb:8086/query --data-urlencode 'q=CREATE CONTINUOUS QUERY cq_86400s ON homer RESAMPLE EVERY 1h BEGIN SELECT mean(*) INTO homer."86400s".:MEASUREMENT FROM homer."60s"./.*/ GROUP BY time(1d),* END'
          curl -G http://influxdb:8086/query --data-urlencode 'q=drop retention policy "autogen" ON "homer"'
          echo Chronograf Dashboard push ...;
          curl -i -X POST -H "Content-Type: application/json" http://chronograf:8888/chronograf/v1/dashboards -d @/tmp/homer_dashboard.json
          echo Provisioning completed! Exiting ...;
          touch /.bootstrapped
          exit 0;
        image: alpine:latest
        name: provisioning
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: homer-chronograf-config
      volumes:
      - name: homer-chronograf-config
        configMap:
          name: homer-chronograf-dashboard
